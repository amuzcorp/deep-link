<?php

namespace AmuzPackages\DeepLink\Nova\Resources;

use Laravel\Nova\Fields\BelongsTo;
use Laravel\Nova\Fields\DateTime;
use Laravel\Nova\Fields\HasMany;
use Laravel\Nova\Fields\URL;
use Laravel\Nova\Http\Requests\NovaRequest;
use Laravel\Nova\Fields\ID;
use App\Nova\Resource;

class LinkContext extends Resource
{
    /**
     * The model the resource corresponds to.
     *
     * @var string
     */
    public static string $model = \AmuzPackages\DeepLink\Models\LinkContext::class;

    /**
     * The single value that should be used to represent the resource when being displayed.
     *
     * @var string
     */
    public static $title = 'short_link';

    /**
     * The columns that should be searched.
     *
     * @var array
     */
    public static $search = [
        'id',
    ];

    /**
     * Group of resources - It's autogenerated as module name
     * @var string
     */
    public static $group = "DEEP-LINK";

    public function fields(NovaRequest $request): array
    {
        return [
            ID::make()->sortable(),
            BelongsTo::make('대상 딥 링크','deepLink',DeepLink::class),

            URL::make('Short Link',function(\AmuzPackages\DeepLink\Models\LinkContext $linkContext){
                return route('deep-link.short-link',['shortLink' => $linkContext->getAttribute('short_link')]);
            })->displayUsing(fn($value)=>$value),

            DateTime::make(__('Created At'),'created_at'),
//            JsonField::make('Data','context_data')
//                ->onlyOnDetail()
//                ->mode('view')
//                ->expandedOnStart(true)
//                ->defaultJsonPath(__DIR__ . "/../deep-link-default.json"),

            HasMany::make('Histories','linkContextHistories',LinkContextHistory::class)
        ];
    }

    public function cards(NovaRequest $request)
    {
        return [];
    }

    /**
     * Get the filters available for the resource.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest $request
     * @return array
     */
    public function filters(NovaRequest $request)
    {
        return [];
    }

    /**
     * Get the lenses available for the resource.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest $request
     * @return array
     */
    public function lenses(NovaRequest $request)
    {
        return [];
    }

    /**
     * Get the actions available for the resource.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest $request
     * @return array
     */
    public function actions(NovaRequest $request)
    {
        return [];
    }
}
