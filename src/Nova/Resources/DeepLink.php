<?php

namespace AmuzPackages\DeepLink\Nova\Resources;

use IbrahemKamal\JsonField\JsonField;
use Laravel\Nova\Fields\Text;
use Laravel\Nova\Fields\URL;
use Laravel\Nova\Http\Requests\NovaRequest;
use Laravel\Nova\Fields\ID;
use App\Nova\Resource;

class DeepLink extends Resource
{
    /**
     * The model the resource corresponds to.
     *
     * @var string
     */
    public static string $model = \AmuzPackages\DeepLink\Models\DeepLink::class;

    /**
     * The single value that should be used to represent the resource when being displayed.
     *
     * @var string
     */
    public static $title = 'id';

    /**
     * The columns that should be searched.
     *
     * @var array
     */
    public static $search = [
        'id',
    ];

    /**
     * Group of resources - It's autogenerated as module name
     * @var string
     */
    public static $group = "DEEP-LINK";

    /**
     * Get the fields displayed by the resource.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest $request
     * @return array
     */
    public function fields(NovaRequest $request)
    {
        return [
            ID::make()->sortable(),

            URL::make('DeepLink',function(\AmuzPackages\DeepLink\Models\DeepLink $deepLink){
                return route('deep-link.get',['slug' => $deepLink->getAttribute('slug')]);
            })->displayUsing(fn($value)=>$value),

            URL::make('대표 URL','target_url')->nullable(),

            Text::make('Android Package','aos_package')->nullable(),
            URL::make('Install URL (android)','aos_install_url')->nullable(),

            Text::make('iOS Bundle Name','ios_bundle')->nullable(),
            URL::make('Install URL (iOS)','ios_install_url')->nullable(),

            JsonField::make('Data','context_data')
                ->onlyOnDetail()
                ->mode('view')
                ->expandedOnStart(true)
                ->defaultJsonPath(__DIR__ . "/../deep-link-default.json")
        ];
    }

    /**
     * Get the cards available for the request.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest $request
     * @return array
     */
    public function cards(NovaRequest $request)
    {
        return [];
    }

    /**
     * Get the filters available for the resource.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest $request
     * @return array
     */
    public function filters(NovaRequest $request)
    {
        return [];
    }

    /**
     * Get the lenses available for the resource.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest $request
     * @return array
     */
    public function lenses(NovaRequest $request)
    {
        return [];
    }

    /**
     * Get the actions available for the resource.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest $request
     * @return array
     */
    public function actions(NovaRequest $request)
    {
        return [];
    }
}
